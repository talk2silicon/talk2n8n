[build-system]
requires = ["setuptools>=67.0.0", "wheel", "setuptools-scm[toml]>=7.1.0"]
build-backend = "setuptools.build_meta"

# Enable setuptools-scm for version management
[tool.setuptools_scm]
write_to = "src/talk2n8n/_version.py"

[project]
name = "talk2n8n"
version = "0.1.0"
description = "A tool for interacting with n8n workflows through natural language"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "langchain-core>=0.1.20",
    "langchain-openai>=0.1.1",
    "langgraph>=0.0.26",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "langchain-anthropic>=0.1.8",
    "supabase>=1.0.3",
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.22.0",
    "python-multipart>=0.0.6",
    "colorama>=0.4.6",
    "slack-bolt>=1.18.0",
    "pyngrok>=6.0.0",
    "cryptography>=41.0.0",
    "gradio>=4.26.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/talk2n8n"
Documentation = "https://github.com/yourusername/talk2n8n#readme"
Repository = "https://github.com/yourusername/talk2n8n"
Changelog = "https://github.com/yourusername/talk2n8n/blob/main/CHANGELOG.md"
Issues = "https://github.com/yourusername/talk2n8n/issues"

[project.optional-dependencies]
# Minimal development dependencies following talk2browser pattern
dev = [
    # Essential testing
    "pytest>=7.3.1",
    
    # Essential code quality tools
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    
    # Type stubs
    "types-requests>=2.0.0",
]

[project.scripts]
talk2n8n = "talk2n8n.cli:main"

[tool.poetry.scripts]
lint = "pre-commit run --all-files"
format = "black ."
test = "pytest tests/"
coverage = "pytest --cov=talk2n8n --cov-report=term-missing tests/"
docs = "sphinx-build -b html docs/ docs/_build/html"
serve-docs = "python -m http.server --directory docs/_build/html 8000"
check = "poetry run pre-commit run --all-files"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/_version\.py$
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "-v --tb=short"
asyncio_default_fixture_loop_scope = "function"

[tool.setuptools.packages.find]
where = ["src"]
include = ["agent*", "n8n*", "slack*", "config*"]
